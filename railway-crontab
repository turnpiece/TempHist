# Railway Crontab Configuration for TempHist

# This file shows how to set up cron jobs in Railway

# Railway Environment Variables (set these in Railway dashboard):

# VITE_API_BASE=https://devapi.temphist.com (or https://api.temphist.com for production)

# API_TOKEN=your_api_token_here

# OUTPUT_DIR=/app/data (optional, defaults to /app/data on Railway)

# Cron Jobs (add these to your Railway crontab):

# Note: Railway uses UTC time for cron jobs

# Update locations daily at midnight UTC

0 0 \* \* \* node scripts/cron-fetch-locations.js

# Update daily temperature data hourly

0 \* \* \* \* node scripts/cron-fetch-daily-data.js

# Alternative: Update temperature data every 6 hours instead of hourly

# 0 _/6 _ \* \* node scripts/cron-fetch-daily-data.js

# How to set up in Railway:

# 1. Go to your Railway project dashboard

# 2. Navigate to the "Cron" tab

# 3. Add two cron jobs:

# CRON JOB 1 (Locations) - Run first to create locations file:

# - Schedule: 0 0 \* \* \* (daily at midnight)

# - Custom Start Command: node scripts/cron-fetch-locations.js

# CRON JOB 2 (Daily Data) - Can run independently with fallback:

# - Schedule: 0 \* \* \* \* (hourly)

# - Custom Start Command: node scripts/cron-fetch-daily-data.js

# Note: The daily data script now has fallback mechanisms to fetch locations

# from the API if the locations file doesn't exist, so it can run independently.

# 4. Set the environment variables in the "Variables" tab

# 5. Make sure the working directory is set to the project root

# Environment Variables to set in Railway:

# VITE_API_BASE=https://devapi.temphist.com

# API_TOKEN=your_actual_api_token

# DEBUG_LOGGING=true (optional, for debugging)

# Notes:

# - Railway automatically provides RAILWAY_ENVIRONMENT variable

# - The scripts will detect Railway environment and use /app/data directory

# - Logs will appear in Railway's log viewer

# - No need to set OUTPUT_DIR as it defaults to /app/data on Railway
